// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Builder = require("./Builder.bs.js");
var $$Promise = require("@ryyppy/rescript-promise/src/Promise.bs.js");

function imageDefToImage(imageDef) {
  return Builder.ImageFactory.makeFromUrl(imageDef.url).then(function (image) {
              return [
                      imageDef.id,
                      image
                    ];
            });
}

function textureDefToTexture(textureDef) {
  return Builder.Texture.makeFromUrl(textureDef.url, textureDef.standardWidth, textureDef.standardHeight).then(function (texture) {
              return [
                      textureDef.id,
                      texture
                    ];
            });
}

function loadResources(generatorDef) {
  var imagePromises = Promise.all(generatorDef.images.map(imageDefToImage));
  var texturePromises = Promise.all(generatorDef.textures.map(textureDefToTexture));
  return $$Promise.$$catch(imagePromises.then(function (images) {
                  return texturePromises.then(function (textures) {
                              return {
                                      TAG: /* Ok */0,
                                      _0: [
                                        images,
                                        textures
                                      ]
                                    };
                            });
                }), (function (exn) {
                console.log(exn);
                return Promise.resolve({
                            TAG: /* Error */1,
                            _0: "Failed to load resources"
                          });
              }));
}

exports.imageDefToImage = imageDefToImage;
exports.textureDefToTexture = textureDefToTexture;
exports.loadResources = loadResources;
/* No side effect */
