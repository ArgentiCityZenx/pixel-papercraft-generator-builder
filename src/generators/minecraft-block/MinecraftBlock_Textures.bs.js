// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var MinecraftBlock_TextureData = require("./textures/MinecraftBlock_TextureData.bs.js");

var versionIds = Belt_Array.reverse(MinecraftBlock_TextureData.versions.map(function (version) {
          return version.id;
        }));

function findVersion(versionId) {
  return Caml_option.undefined_to_opt(MinecraftBlock_TextureData.versions.find(function (version) {
                  return version.id === versionId;
                }));
}

function findVersionTexture(versionId, textureId) {
  var version = findVersion(versionId);
  if (version !== undefined) {
    return Caml_option.undefined_to_opt(Caml_option.valFromOption(version).textures.find(function (texture) {
                    return texture.id === textureId;
                  }));
  }
  
}

function findTextureDef(versionId) {
  return Caml_option.undefined_to_opt(MinecraftBlock_TextureData.textures.find(function (texture) {
                  return texture.id === versionId;
                }));
}

function calculateTextureFrameIndex(textureIndex, frame) {
  return textureIndex + ((frame - 1 | 0) << 4) | 0;
}

function findTextureFrames(versionId) {
  var version = findVersion(versionId);
  if (version !== undefined) {
    return Belt_Array.concatMany(Caml_option.valFromOption(version).textures.map(function (texture) {
                    var textureId = texture.id;
                    var frames = texture.frames;
                    var index = texture.index;
                    return Belt_Array.map(Belt_Array.range(1, frames), (function (frame) {
                                  var frameIndex = calculateTextureFrameIndex(index, frame);
                                  return {
                                          versionId: versionId,
                                          textureId: textureId,
                                          frame: frame,
                                          frameIndex: frameIndex
                                        };
                                }));
                  }));
  }
  
}

function findTextureFrameIndex(versionId, textureId, frame) {
  var texture = findVersionTexture(versionId, textureId);
  if (texture === undefined) {
    return ;
  }
  var textureIndex = Caml_option.valFromOption(texture).index;
  return calculateTextureFrameIndex(textureIndex, frame);
}

function findTextureFrameCount(versionId, textureId) {
  var texture = findVersionTexture(versionId, textureId);
  if (texture !== undefined) {
    return Caml_option.valFromOption(texture).frames;
  } else {
    return 0;
  }
}

var TextureData;

var textureSize = 16;

var textures = MinecraftBlock_TextureData.textures;

exports.TextureData = TextureData;
exports.textureSize = textureSize;
exports.textures = textures;
exports.versionIds = versionIds;
exports.findVersion = findVersion;
exports.findVersionTexture = findVersionTexture;
exports.findTextureDef = findTextureDef;
exports.calculateTextureFrameIndex = calculateTextureFrameIndex;
exports.findTextureFrames = findTextureFrames;
exports.findTextureFrameIndex = findTextureFrameIndex;
exports.findTextureFrameCount = findTextureFrameCount;
/* versionIds Not a pure module */
