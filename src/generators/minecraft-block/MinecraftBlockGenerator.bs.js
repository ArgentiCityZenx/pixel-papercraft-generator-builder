// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Generator = require("../../builder/modules/Generator.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var MinecraftBlock_Face = require("./MinecraftBlock_Face.bs.js");
var MinecraftBlock_Textures = require("./MinecraftBlock_Textures.bs.js");
var MinecraftBlock_Components = require("./MinecraftBlock_Components.bs.js");

function requireImage(id) {
  return require("./images/" + id + ".png");
}

function requireTexture(id) {
  return require("./textures/" + id + ".png");
}

function make(ox, oy) {
  return {
          top: [
            ox + 128 | 0,
            oy + 0 | 0,
            128,
            128
          ],
          bottom: [
            ox + 128 | 0,
            oy + 256 | 0,
            128,
            128
          ],
          right: [
            ox,
            oy + 128 | 0,
            128,
            128
          ],
          front: [
            ox + 128 | 0,
            oy + 128 | 0,
            128,
            128
          ],
          left: [
            ox + 256 | 0,
            oy + 128 | 0,
            128,
            128
          ],
          back: [
            ox + 384 | 0,
            oy + 128 | 0,
            128,
            128
          ]
        };
}

var Regions = {
  size: 128,
  make: make
};

function draw(blockId, ox, oy) {
  var regions = make(ox, oy);
  MinecraftBlock_Face.defineInputRegion("BlockFaceTop" + blockId, regions.top);
  MinecraftBlock_Face.defineInputRegion("BlockFaceBottom" + blockId, regions.bottom);
  MinecraftBlock_Face.defineInputRegion("BlockFaceRight" + blockId, regions.right);
  MinecraftBlock_Face.defineInputRegion("BlockFaceFront" + blockId, regions.front);
  MinecraftBlock_Face.defineInputRegion("BlockFaceLeft" + blockId, regions.left);
  MinecraftBlock_Face.defineInputRegion("BlockFaceBack" + blockId, regions.back);
  MinecraftBlock_Face.draw("BlockFaceTop" + blockId, [
        0,
        0,
        16,
        16
      ], regions.top);
  MinecraftBlock_Face.draw("BlockFaceBottom" + blockId, [
        0,
        0,
        16,
        16
      ], regions.bottom);
  MinecraftBlock_Face.draw("BlockFaceRight" + blockId, [
        0,
        0,
        16,
        16
      ], regions.right);
  MinecraftBlock_Face.draw("BlockFaceFront" + blockId, [
        0,
        0,
        16,
        16
      ], regions.front);
  MinecraftBlock_Face.draw("BlockFaceLeft" + blockId, [
        0,
        0,
        16,
        16
      ], regions.left);
  MinecraftBlock_Face.draw("BlockFaceBack" + blockId, [
        0,
        0,
        16,
        16
      ], regions.back);
  Generator.drawImage("Tabs-Block", [
        ox - 32 | 0,
        oy - 1 | 0
      ]);
  var showFolds = Generator.getBooleanInputValue("Show Folds");
  if (showFolds) {
    return Generator.drawImage("Folds-Block", [
                ox - 32 | 0,
                oy - 1 | 0
              ]);
  }
  
}

var Block = {
  Regions: Regions,
  draw: draw
};

function make$1(ox, oy) {
  return {
          top: [
            ox + 128 | 0,
            oy + 64 | 0,
            128,
            128
          ],
          bottom: [
            ox + 128 | 0,
            oy + 256 | 0,
            128,
            128
          ],
          right: [
            ox,
            oy + 192 | 0,
            128,
            64
          ],
          front: [
            ox + 128 | 0,
            oy + 192 | 0,
            128,
            64
          ],
          left: [
            ox + 256 | 0,
            oy + 192 | 0,
            128,
            64
          ],
          back: [
            ox + 384 | 0,
            oy + 192 | 0,
            128,
            64
          ]
        };
}

var Regions$1 = {
  size: 128,
  make: make$1
};

function draw$1(blockId, ox, oy) {
  var regions = make$1(ox, oy);
  MinecraftBlock_Face.defineInputRegion("SlabFaceTop" + blockId, regions.top);
  MinecraftBlock_Face.defineInputRegion("SlabFaceBottom" + blockId, regions.bottom);
  MinecraftBlock_Face.defineInputRegion("SlabFaceRight" + blockId, regions.right);
  MinecraftBlock_Face.defineInputRegion("SlabFaceFront" + blockId, regions.front);
  MinecraftBlock_Face.defineInputRegion("SlabFaceLeft" + blockId, regions.left);
  MinecraftBlock_Face.defineInputRegion("SlabFaceBack" + blockId, regions.back);
  MinecraftBlock_Face.draw("SlabFaceTop" + blockId, [
        0,
        0,
        16,
        16
      ], regions.top);
  MinecraftBlock_Face.draw("SlabFaceBottom" + blockId, [
        0,
        0,
        16,
        16
      ], regions.bottom);
  MinecraftBlock_Face.draw("SlabFaceRight" + blockId, [
        0,
        8,
        16,
        8
      ], regions.right);
  MinecraftBlock_Face.draw("SlabFaceFront" + blockId, [
        0,
        8,
        16,
        8
      ], regions.front);
  MinecraftBlock_Face.draw("SlabFaceLeft" + blockId, [
        0,
        8,
        16,
        8
      ], regions.left);
  MinecraftBlock_Face.draw("SlabFaceBack" + blockId, [
        0,
        8,
        16,
        8
      ], regions.back);
  Generator.drawImage("Tabs-Slab", [
        ox - 32 | 0,
        oy - 1 | 0
      ]);
  var showFolds = Generator.getBooleanInputValue("Show Folds");
  if (showFolds) {
    return Generator.drawImage("Folds-Slab", [
                ox - 32 | 0,
                oy - 1 | 0
              ]);
  }
  
}

var Slab = {
  Regions: Regions$1,
  draw: draw$1
};

function make$2(ox, oy) {
  return {
          top: [
            ox + 128 | 0,
            oy + 64 | 0,
            128,
            64
          ],
          top2: [
            ox + 384 | 0,
            oy + 128 | 0,
            128,
            64
          ],
          bottom: [
            ox + 128 | 0,
            oy + 256 | 0,
            128,
            128
          ],
          right: [
            ox,
            oy + 128 | 0,
            128,
            128
          ],
          front: [
            ox + 128 | 0,
            oy + 128 | 0,
            128,
            128
          ],
          left: [
            ox + 256 | 0,
            oy + 128 | 0,
            128,
            128
          ],
          back: [
            ox + 384 | 0,
            oy + 192 | 0,
            128,
            64
          ],
          back2: [
            ox + 128 | 0,
            oy + 0 | 0,
            128,
            64
          ]
        };
}

var Regions$2 = {
  size: 128,
  make: make$2
};

function draw$2(blockId, ox, oy) {
  var regions = make$2(ox, oy);
  MinecraftBlock_Face.defineInputRegion("StairFaceTop" + blockId, regions.top);
  MinecraftBlock_Face.defineInputRegion("StairFaceBottom" + blockId, regions.bottom);
  MinecraftBlock_Face.defineInputRegion("StairFaceRight" + blockId, regions.right);
  MinecraftBlock_Face.defineInputRegion("StairFaceFront" + blockId, regions.front);
  MinecraftBlock_Face.defineInputRegion("StairFaceLeft" + blockId, regions.left);
  MinecraftBlock_Face.defineInputRegion("StairFaceBack" + blockId, regions.back);
  MinecraftBlock_Face.draw("StairFaceTop" + blockId, [
        0,
        8,
        16,
        8
      ], regions.top);
  MinecraftBlock_Face.draw180("StairFaceBack" + blockId, [
        0,
        0,
        16,
        8
      ], regions.back2);
  MinecraftBlock_Face.draw("StairFaceBottom" + blockId, [
        0,
        0,
        16,
        16
      ], regions.bottom);
  MinecraftBlock_Face.draw("StairFaceRight" + blockId, [
        0,
        0,
        16,
        16
      ], regions.right);
  MinecraftBlock_Face.draw("StairFaceFront" + blockId, [
        0,
        0,
        16,
        16
      ], regions.front);
  MinecraftBlock_Face.draw("StairFaceLeft" + blockId, [
        0,
        0,
        16,
        16
      ], regions.left);
  MinecraftBlock_Face.draw("StairFaceBack" + blockId, [
        0,
        8,
        16,
        8
      ], regions.back);
  MinecraftBlock_Face.draw180("StairFaceTop" + blockId, [
        0,
        0,
        16,
        8
      ], regions.top2);
  Generator.drawImage("Tabs-Stair", [
        ox - 32 | 0,
        oy - 1 | 0
      ]);
  var showFolds = Generator.getBooleanInputValue("Show Folds");
  if (showFolds) {
    return Generator.drawImage("Folds-Stair", [
                ox - 32 | 0,
                oy - 1 | 0
              ]);
  }
  
}

var Stair = {
  Regions: Regions$2,
  draw: draw$2
};

function make$3(ox, oy) {
  return {
          top: [
            (ox + 128 | 0) + 32 | 0,
            oy + 96 | 0,
            32,
            32
          ],
          bottom: [
            (ox + 128 | 0) + 32 | 0,
            oy + 256 | 0,
            32,
            32
          ],
          right: [
            (ox + 128 | 0) + 64 | 0,
            oy + 128 | 0,
            32,
            128
          ],
          front: [
            (ox + 128 | 0) + 32 | 0,
            oy + 128 | 0,
            32,
            128
          ],
          left: [
            ox + 128 | 0,
            oy + 128 | 0,
            32,
            128
          ],
          back: [
            (ox + 128 | 0) + 96 | 0,
            oy + 128 | 0,
            32,
            128
          ],
          stop1: [
            (ox - 1 | 0) + 16 | 0,
            oy + 96 | 0,
            48,
            16
          ],
          sbottom1: [
            (ox - 1 | 0) + 16 | 0,
            ((oy + 96 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          sright1: [
            ((ox - 1 | 0) + 16 | 0) + 48 | 0,
            (oy + 96 | 0) + 16 | 0,
            16,
            24
          ],
          sfront1: [
            (ox - 1 | 0) + 16 | 0,
            (oy + 96 | 0) + 16 | 0,
            48,
            24
          ],
          sleft1: [
            ox - 1 | 0,
            (oy + 96 | 0) + 16 | 0,
            16,
            24
          ],
          sback1: [
            (ox - 1 | 0) + 16 | 0,
            ((oy + 96 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ],
          stop2: [
            (ox - 1 | 0) + 16 | 0,
            oy + 208 | 0,
            48,
            16
          ],
          sbottom2: [
            (ox - 1 | 0) + 16 | 0,
            ((oy + 208 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          sright2: [
            ((ox - 1 | 0) + 16 | 0) + 48 | 0,
            (oy + 208 | 0) + 16 | 0,
            16,
            24
          ],
          sfront2: [
            (ox - 1 | 0) + 16 | 0,
            (oy + 208 | 0) + 16 | 0,
            48,
            24
          ],
          sleft2: [
            ox - 1 | 0,
            (oy + 208 | 0) + 16 | 0,
            16,
            24
          ],
          sback2: [
            (ox - 1 | 0) + 16 | 0,
            ((oy + 208 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ],
          ltop1: [
            (ox + 320 | 0) + 16 | 0,
            oy + 96 | 0,
            48,
            16
          ],
          lbottom1: [
            (ox + 320 | 0) + 16 | 0,
            ((oy + 96 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          lright1: [
            ((ox + 320 | 0) + 16 | 0) + 96 | 0,
            (oy + 96 | 0) + 16 | 0,
            16,
            24
          ],
          lfront1: [
            (ox + 320 | 0) + 16 | 0,
            (oy + 96 | 0) + 16 | 0,
            48,
            24
          ],
          lleft1: [
            ox + 320 | 0,
            (oy + 96 | 0) + 16 | 0,
            16,
            24
          ],
          lback1: [
            (ox + 320 | 0) + 16 | 0,
            ((oy + 96 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ],
          l2top1: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            oy + 96 | 0,
            48,
            16
          ],
          l2bottom1: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            ((oy + 96 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          l2front1: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            (oy + 96 | 0) + 16 | 0,
            48,
            24
          ],
          l2back1: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            ((oy + 96 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ],
          ltop2: [
            (ox + 320 | 0) + 16 | 0,
            oy + 208 | 0,
            48,
            16
          ],
          lbottom2: [
            (ox + 320 | 0) + 16 | 0,
            ((oy + 208 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          lright2: [
            ((ox + 320 | 0) + 16 | 0) + 96 | 0,
            (oy + 208 | 0) + 16 | 0,
            16,
            24
          ],
          lfront2: [
            (ox + 320 | 0) + 16 | 0,
            (oy + 208 | 0) + 16 | 0,
            48,
            24
          ],
          lleft2: [
            ox + 320 | 0,
            (oy + 208 | 0) + 16 | 0,
            16,
            24
          ],
          lback2: [
            (ox + 320 | 0) + 16 | 0,
            ((oy + 208 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ],
          l2top2: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            oy + 208 | 0,
            48,
            16
          ],
          l2bottom2: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            ((oy + 208 | 0) + 16 | 0) + 24 | 0,
            48,
            16
          ],
          l2front2: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            (oy + 208 | 0) + 16 | 0,
            48,
            24
          ],
          l2back2: [
            ((ox + 320 | 0) + 16 | 0) + 48 | 0,
            ((oy + 208 | 0) + 32 | 0) + 24 | 0,
            48,
            24
          ]
        };
}

var Regions$3 = {
  size: 128,
  size2: 16,
  size3: 24,
  sizel: 96,
  x1: -1,
  x2: 320,
  y1: 96,
  y2: 208,
  make: make$3
};

function draw$3(blockId, ox, oy) {
  var regions = make$3(ox, oy);
  MinecraftBlock_Face.defineInputRegion("FenceFaceTop" + blockId, regions.top);
  MinecraftBlock_Face.defineInputRegion("FenceFaceBottom" + blockId, regions.bottom);
  MinecraftBlock_Face.defineInputRegion("FenceFaceRight" + blockId, regions.right);
  MinecraftBlock_Face.defineInputRegion("FenceFaceFront" + blockId, regions.front);
  MinecraftBlock_Face.defineInputRegion("FenceFaceLeft" + blockId, regions.left);
  MinecraftBlock_Face.defineInputRegion("FenceFaceBack" + blockId, regions.back);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        6,
        6,
        4,
        4
      ], regions.top);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        6,
        6,
        4,
        4
      ], regions.bottom);
  MinecraftBlock_Face.draw("FenceFaceRight" + blockId, [
        6,
        0,
        4,
        16
      ], regions.right);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        6,
        0,
        4,
        16
      ], regions.front);
  MinecraftBlock_Face.draw("FenceFaceLeft" + blockId, [
        6,
        0,
        4,
        16
      ], regions.left);
  MinecraftBlock_Face.draw("FenceFaceBack" + blockId, [
        6,
        0,
        4,
        16
      ], regions.back);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        10,
        7,
        6,
        2
      ], regions.stop1);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        10,
        7,
        6,
        2
      ], regions.sbottom1);
  MinecraftBlock_Face.draw("FenceFaceRight" + blockId, [
        7,
        1,
        2,
        3
      ], regions.sright1);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        10,
        1,
        6,
        3
      ], regions.sfront1);
  MinecraftBlock_Face.draw("FenceFaceLeft" + blockId, [
        7,
        1,
        2,
        3
      ], regions.sleft1);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        0,
        1,
        6,
        3
      ], regions.sback1);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        10,
        7,
        6,
        2
      ], regions.stop2);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        10,
        7,
        6,
        2
      ], regions.sbottom2);
  MinecraftBlock_Face.draw("FenceFaceRight" + blockId, [
        7,
        7,
        2,
        3
      ], regions.sright2);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        10,
        7,
        6,
        3
      ], regions.sfront2);
  MinecraftBlock_Face.draw("FenceFaceLeft" + blockId, [
        7,
        7,
        2,
        3
      ], regions.sleft2);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        0,
        7,
        6,
        3
      ], regions.sback2);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        10,
        7,
        6,
        2
      ], regions.ltop1);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        10,
        7,
        6,
        2
      ], regions.lbottom1);
  MinecraftBlock_Face.draw("FenceFaceRight" + blockId, [
        7,
        1,
        2,
        3
      ], regions.lright1);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        10,
        1,
        6,
        3
      ], regions.lfront1);
  MinecraftBlock_Face.draw("FenceFaceLeft" + blockId, [
        7,
        1,
        2,
        3
      ], regions.lleft1);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        0,
        1,
        6,
        3
      ], regions.lback1);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        0,
        7,
        6,
        2
      ], regions.l2top1);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        0,
        7,
        6,
        2
      ], regions.l2bottom1);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        0,
        1,
        6,
        3
      ], regions.l2front1);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        7,
        1,
        6,
        3
      ], regions.l2back1);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        10,
        7,
        6,
        2
      ], regions.ltop2);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        10,
        7,
        6,
        2
      ], regions.lbottom2);
  MinecraftBlock_Face.draw("FenceFaceRight" + blockId, [
        7,
        7,
        2,
        3
      ], regions.lright2);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        10,
        7,
        6,
        3
      ], regions.lfront2);
  MinecraftBlock_Face.draw("FenceFaceLeft" + blockId, [
        7,
        7,
        2,
        3
      ], regions.lleft2);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        0,
        7,
        6,
        3
      ], regions.lback2);
  MinecraftBlock_Face.draw("FenceFaceTop" + blockId, [
        0,
        7,
        6,
        2
      ], regions.l2top2);
  MinecraftBlock_Face.draw("FenceFaceBottom" + blockId, [
        0,
        7,
        6,
        2
      ], regions.l2bottom2);
  MinecraftBlock_Face.draw("FenceFaceFront" + blockId, [
        0,
        7,
        6,
        3
      ], regions.l2front2);
  MinecraftBlock_Face.draw180("FenceFaceBack" + blockId, [
        7,
        7,
        6,
        3
      ], regions.l2back2);
  Generator.drawImage("Tabs-Fence", [
        ox - 32 | 0,
        oy - 1 | 0
      ]);
  var showFolds = Generator.getBooleanInputValue("Show Folds");
  if (showFolds) {
    return Generator.drawImage("Folds-Fence", [
                ox - 32 | 0,
                oy - 1 | 0
              ]);
  }
  
}

var Fence = {
  Regions: Regions$3,
  draw: draw$3
};

var id = "minecraft-block";

var name = "Minecraft Block";

var images = [
  {
    id: "Background",
    url: requireImage("Background")
  },
  {
    id: "Title",
    url: requireImage("Title")
  },
  {
    id: "Folds-Block",
    url: requireImage("Folds-Block")
  },
  {
    id: "Tabs-Block",
    url: requireImage("Tabs-Block")
  },
  {
    id: "Folds-Slab",
    url: requireImage("Folds-Slab")
  },
  {
    id: "Tabs-Slab",
    url: requireImage("Tabs-Slab")
  },
  {
    id: "Folds-Stair",
    url: requireImage("Folds-Stair")
  },
  {
    id: "Tabs-Stair",
    url: requireImage("Tabs-Stair")
  },
  {
    id: "Folds-Fence",
    url: requireImage("Folds-Fence")
  },
  {
    id: "Tabs-Fence",
    url: requireImage("Tabs-Fence")
  }
];

function script(param) {
  Generator.defineSelectInput("Version", MinecraftBlock_Textures.versionIds);
  var versionId = Generator.getSelectInputValue("Version");
  Generator.defineCustomStringInput("BlockTexture", (function (onChange) {
          return React.createElement(MinecraftBlock_Components.TexturePicker.make, {
                      versionId: versionId,
                      onChange: onChange
                    });
        }));
  Generator.defineSelectInput("Number of Blocks", [
        "1",
        "2"
      ]);
  var numberOfBlocks = Belt_Option.getWithDefault(Belt_Int.fromString(Generator.getSelectInputValue("Number of Blocks")), 1);
  Generator.defineBooleanInput("Show Folds", true);
  Generator.drawImage("Background", [
        0,
        0
      ]);
  for(var i = 1; i <= numberOfBlocks; ++i){
    var blockId = i.toString();
    var typeName = "Block " + blockId + " Type";
    Generator.defineSelectInput(typeName, [
          "Block",
          "Slab",
          "Stair",
          "Fence"
        ]);
    var blockType = Generator.getSelectInputValue(typeName);
    switch (blockType) {
      case "Block" :
          var oy = 16 + Math.imul(400, i - 1 | 0) | 0;
          draw(blockId, 57, oy);
          break;
      case "Fence" :
          var oy$1 = 16 + Math.imul(400, i - 1 | 0) | 0;
          draw$3(blockId, 57, oy$1);
          break;
      case "Slab" :
          var oy$2 = 16 + Math.imul(400, i - 1 | 0) | 0;
          draw$1(blockId, 57, oy$2);
          break;
      case "Stair" :
          var oy$3 = 16 + Math.imul(400, i - 1 | 0) | 0;
          draw$2(blockId, 57, oy$3);
          break;
      default:
        
    }
  }
  return Generator.drawImage("Title", [
              0,
              0
            ]);
}

var generator = {
  id: id,
  name: name,
  thumbnail: undefined,
  video: undefined,
  instructions: undefined,
  images: images,
  textures: MinecraftBlock_Textures.textures,
  script: script
};

var Components;

var Textures;

var Face;

var textures = MinecraftBlock_Textures.textures;

exports.Components = Components;
exports.Textures = Textures;
exports.Face = Face;
exports.requireImage = requireImage;
exports.requireTexture = requireTexture;
exports.Block = Block;
exports.Slab = Slab;
exports.Stair = Stair;
exports.Fence = Fence;
exports.id = id;
exports.name = name;
exports.images = images;
exports.textures = textures;
exports.script = script;
exports.generator = generator;
/* images Not a pure module */
